"""Adds repostories/archives."""

########################################################################
# DO NOT EDIT THIS FILE unless you are inside the
# https://github.com/reboot-dev/mono repository. If you
# encounter it anywhere else it is because it has been copied there in
# order to simplify adding transitive dependencies. If you want a
# different version of respect follow the Bazel build
# instructions at https://github.com/reboot-dev/mono.
########################################################################

load("@bazel_tools//tools/build_defs/repo:git.bzl", "git_repository")
load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
load("@bazel_tools//tools/build_defs/repo:utils.bzl", "maybe")
load("@com_github_3rdparty_bazel_rules_jemalloc//bazel:repos.bzl", jemalloc_repos = "repos")
load("@com_github_3rdparty_stout//bazel:repos.bzl", stout_repos = "repos")
load("@com_github_reboot_dev_pyprotoc_plugin//bazel:repos.bzl", pyprotoc_plugin_repos = "repos")

def repos():
    """Adds external repositories/archives needed by Reboot (phase 1)."""

    # Official Python rules for Bazel.
    maybe(
        http_archive,
        name = "rules_python",
        sha256 = "9acc0944c94adb23fba1c9988b48768b1bacc6583b52a2586895c5b7491e2e31",
        url = "https://github.com/bazelbuild/rules_python/releases/download/0.27.0/rules_python-0.27.0.tar.gz",
        strip_prefix = "rules_python-0.27.0",
    )

    # Declare a specific gRPC version *first*, before another dependency has a chance
    # to define an alternative incompatible version.
    maybe(
        http_archive,
        name = "com_github_grpc_grpc",
        urls =
            ["https://github.com/grpc/grpc/archive/refs/tags/v1.71.0.tar.gz"],
        sha256 = "0d631419e54ec5b29def798623ee3bf5520dac77abeab3284ef7027ec2363f91",
        strip_prefix = "grpc-1.71.0",
        patches = [
            "@com_github_reboot_dev_reboot//bazel:grpc_00_output_dir.patch",
            "@com_github_reboot_dev_reboot//bazel:grpc_01_mypy_pyi_generation.patch",
            "@com_github_reboot_dev_reboot//bazel:grpc_02_zlib_upgrade.patch",
        ],
        patch_args = ["-p1"],
    )

    maybe(
        http_archive,
        name = "com_google_protobuf",
        sha256 = "6fbe2e6f703bcd3a246529c2cab586ca12a98c4e641f5f71d51fde09eb48e9e7",
        strip_prefix = "protobuf-27.1",
        urls = [
            "https://github.com/protocolbuffers/protobuf/archive/v27.1.tar.gz",
        ],
    )

    stout_repos()

    pyprotoc_plugin_repos()

    jemalloc_repos()

    # Need `rules_foreign_cc` for building RocksDB.
    maybe(
        http_archive,
        name = "rules_foreign_cc",
        sha256 = "4b33d62cf109bcccf286b30ed7121129cc34cf4f4ed9d8a11f38d9108f40ba74",
        strip_prefix = "rules_foreign_cc-0.11.1",
        url = "https://github.com/bazelbuild/rules_foreign_cc/releases/download/0.11.1/rules_foreign_cc-0.11.1.tar.gz",
    )

    maybe(
        http_archive,
        name = "rules_oci",
        sha256 = "46ce9edcff4d3d7b3a550774b82396c0fa619cc9ce9da00c1b09a08b45ea5a14",
        strip_prefix = "rules_oci-1.8.0",
        url = "https://github.com/bazel-contrib/rules_oci/releases/download/v1.8.0/rules_oci-v1.8.0.tar.gz",
    )

    # We don't use rules_license, but one of our transitive dependencies does
    # (BoringSSL), and the version that is transitively included does not seem
    # to properly declare its own dependency on the right version of rules_license.
    http_archive(
        name = "rules_license",
        urls = [
            "https://mirror.bazel.build/github.com/bazelbuild/rules_license/releases/download/1.0.0/rules_license-1.0.0.tar.gz",
            "https://github.com/bazelbuild/rules_license/releases/download/1.0.0/rules_license-1.0.0.tar.gz",
        ],
        sha256 = "26d4021f6898e23b82ef953078389dd49ac2b5618ac564ade4ef87cced147b38",
    )

    maybe(
        http_archive,
        name = "rules_pkg",
        urls = [
            "https://mirror.bazel.build/github.com/bazelbuild/rules_pkg/releases/download/1.0.1/rules_pkg-1.0.1.tar.gz",
            "https://github.com/bazelbuild/rules_pkg/releases/download/1.0.1/rules_pkg-1.0.1.tar.gz",
        ],
        sha256 = "d20c951960ed77cb7b341c2a59488534e494d5ad1d30c4818c736d57772a9fef",
    )

    maybe(
        git_repository,
        name = "googleapis",
        remote = "https://github.com/googleapis/googleapis",
        commit = "43c8e80a384841ec0f740e001f077d9af8a5eae8",
        shallow_since = "1668729854 -0800",
    )

    maybe(
        http_archive,
        name = "buildifier_prebuilt",
        sha256 = "8ada9d88e51ebf5a1fdff37d75ed41d51f5e677cdbeafb0a22dda54747d6e07e",
        strip_prefix = "buildifier-prebuilt-6.4.0",
        urls = [
            "http://github.com/keith/buildifier-prebuilt/archive/6.4.0.tar.gz",
        ],
    )

    maybe(
        http_archive,
        name = "mypy_integration",
        sha256 = "9d270fdb81e76fed1122a94c512b0930d70b837569dc488b58ab9c033641910d",
        strip_prefix = "bazel-mypy-integration-0.5.0",
        url = "https://github.com/bazel-contrib/bazel-mypy-integration/archive/refs/tags/0.5.0.tar.gz",
        patches = [
            "@com_github_reboot_dev_reboot//bazel:bazel-mypy-integration_avoid_duplicate_names.patch",
        ],
        patch_args = ["-p1"],
    )

    maybe(
        http_archive,
        name = "rules_proto",
        sha256 = "14a225870ab4e91869652cfd69ef2028277fc1dc4910d65d353b62d6e0ae21f4",
        strip_prefix = "rules_proto-7.1.0",
        url = "https://github.com/bazelbuild/rules_proto/releases/download/7.1.0/rules_proto-7.1.0.tar.gz",
    )

    maybe(
        http_archive,
        name = "rules_buf",
        sha256 = "bca5582e8bdeb31ec7896de0af262f2ce2f20bf9df78a77f3f23013ba0b35d1a",
        strip_prefix = "rules_buf-2c81951626962cb37aeff5f4ca772b083d8d5882",
        urls = [
            "https://github.com/bufbuild/rules_buf/archive/2c81951626962cb37aeff5f4ca772b083d8d5882.zip",
        ],
        patches = [
            "@com_github_reboot_dev_reboot//bazel:rules_buf_gazelle_resolve_googleapi.patch",
        ],
        patch_args = ["-p1"],
    )

    maybe(
        http_archive,
        name = "com_github_facebook_rocksdb",
        url = "https://github.com/facebook/rocksdb/archive/refs/tags/v7.9.2.zip",
        sha256 = "ce7a498718df53b3a11f64578b283025c6cdd34bf7379a8e838b84eef212178c",
        strip_prefix = "rocksdb-7.9.2",
        # We apply a patch that removes the ability to use 'ccache'
        # because it may get found by cmake but not be usable within a
        # Bazel sandbox.
        patches = ["@com_github_reboot_dev_reboot//bazel/rocksdb:do-not-use-ccache.patch"],
        patch_args = ["-p1"],
        build_file = "@com_github_reboot_dev_reboot//bazel/rocksdb:rocksdb.BUILD",
    )

    maybe(
        http_archive,
        name = "io_bazel_rules_webtesting",
        sha256 = "db4ffb24f7846978307b0e3ee984c1bf7594de3013e4c0edb898a36e81dc8e86",
        urls = [
            "https://github.com/bazelbuild/rules_webtesting/archive/d8208bddac1e44b3327430cc422f952b3244536a.zip",
        ],
        strip_prefix = "rules_webtesting-d8208bddac1e44b3327430cc422f952b3244536a",
    )

    maybe(
        git_repository,
        name = "hermetic_cc_toolchain",
        remote = "https://github.com/uber/hermetic_cc_toolchain.git",
        commit = "0e98778e4e8b60c1c773199cfb340de66d62d485",
        shallow_since = "1726954863 +0000",
    )

    maybe(
        http_archive,
        name = "aspect_bazel_lib",
        sha256 = "6e729e4900695623efa5e9c73b10b0509eb1606b73cafc374a359aed4c9e6958",
        strip_prefix = "bazel-lib-1.42.0",
        url = "https://github.com/aspect-build/bazel-lib/releases/download/v1.42.0/bazel-lib-v1.42.0.tar.gz",
    )

    maybe(
        git_repository,
        name = "com_github_3rdparty_bazel_rules_tl_expected",
        remote = "https://github.com/3rdparty/bazel-rules-expected",
        commit = "c703632657bf4ec9177d9aea0447166d424b3b74",
        shallow_since = "1654243887 +0300",
    )
