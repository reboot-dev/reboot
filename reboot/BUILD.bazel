load("@rules_python//python:defs.bzl", "py_binary", "py_library")
load("@rules_python//python:pip.bzl", "compile_pip_requirements")

# Run 'bazel run rbt:requirements.update' to update the lock file.
compile_pip_requirements(
    name = "requirements",
    src = ":requirements.in",
    requirements_txt = ":requirements_lock.txt",
)

exports_files([
    "versions.bzl",
    "requirements.in",
])

py_library(
    name = "protoc_gen_es_with_deps_py",
    srcs = [
        "protoc_gen_es_with_deps.py",
    ],
    data = [
        ":protoc_gen_es_with_deps.cjs",
    ],
    srcs_version = "PY3",
    visibility = ["//visibility:public"],
)

py_binary(
    # NOTE: we are breaking with our normal naming convention as the protoc
    # compiler insists that the name of a plugin must(!!!!) start with
    # `protoc-gen-`.
    name = "protoc-gen-es_with_deps",
    srcs = ["protoc_gen_es_with_deps.py"],
    data = [
        "//:node_modules/@bufbuild/protobuf",
        "//:node_modules/@bufbuild/protoc-gen-es",
        "//:node_modules/@bufbuild/protoplugin",
        "//:node_modules/@types/node",
    ],
    main = "protoc_gen_es_with_deps.py",
    srcs_version = "PY3",
    visibility = ["//visibility:public"],
    deps = [
        ":protoc_gen_es_with_deps_py",
    ],
)
