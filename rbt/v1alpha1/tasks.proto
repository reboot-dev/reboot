syntax = "proto3";

package rbt.v1alpha1;

import "google/protobuf/any.proto";

////////////////////////////////////////////////////////////////////////

message TaskId {
  string state_type = 1;
  string state_ref = 2;
  bytes task_uuid = 3;
}

////////////////////////////////////////////////////////////////////////

message WaitRequest {
  TaskId task_id = 1;
}

message TaskResponseOrError {
  oneof response_or_error {
    google.protobuf.Any response = 1;
    google.protobuf.Any error = 2;
  }
}

message WaitResponse {
  TaskResponseOrError response_or_error = 1;
}

////////////////////////////////////////////////////////////////////////

message ListPendingTasksRequest {
  // If set, only return pending tasks held by the given consensus ID. If not
  // set (or left at default), return all pending tasks held by all consensuses.
  optional string only_consensus_id = 1;
}

message ListPendingTasksResponse {
  repeated TaskId task_ids = 1;
}

////////////////////////////////////////////////////////////////////////

message CancelTaskRequest {
  TaskId task_id = 1;
}

message CancelTaskResponse {
  enum Status {
    OK = 0;
    NOT_FOUND = 1;
    CANCELLING = 2;
  }
  Status status = 1;
}

message TaskCancelledError {
}

////////////////////////////////////////////////////////////////////////

service Tasks {
  rpc Wait(WaitRequest) returns (WaitResponse);
  rpc ListPendingTasks(ListPendingTasksRequest)
      returns (ListPendingTasksResponse);
  rpc CancelTask(CancelTaskRequest) returns (CancelTaskResponse);
}

////////////////////////////////////////////////////////////////////////
